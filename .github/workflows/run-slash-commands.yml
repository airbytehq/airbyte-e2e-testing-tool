name: Run Testing Tool Commands 

on:
  issue_comment:
    types: [created]

jobs:
  set-params:
    # Only allow slash commands on pull request (not on issues)
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.getref.outputs.repo }}
      ref: ${{ steps.getref.outputs.ref }}
      comment-id: ${{ steps.comment-info.outputs.comment-id }}
      command: ${{ steps.regex.outputs.first_match }}
    steps:
      - name: Get PR repo and ref
        id: getref
        run: |
          pr_info="$(curl ${{ github.event.issue.pull_request.url }})"
          echo ::set-output name=ref::"$(echo $pr_info | jq -r '.head.ref')"
          echo ::set-output name=repo::"$(echo $pr_info | jq -r '.head.repo.full_name')"
      - name: Get comment id
        id: comment-info
        run: |
          echo ::set-output name=comment-id::"${{ github.event.comment.id }}"
      - name: Get command
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: "^/[a-zA-Z0-9_/-]+"
          regex_flags: "i"
          search_string: ${{ github.event.comment.body }}
  publish-image:
    runs-on: ubuntu-latest
    if: |
      needs.set-params.outputs.command == '/publish'
    needs: set-params
    environment: E2E-testing-tool-env
    steps:
      - name: Update comment for processing
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          reactions: eyes, rocket
      - name: Checkout Testing Tool
        uses: actions/checkout@v2
        with:
          repository: ${{  needs.set-params.outputs.repo }}
          ref: ${{  needs.set-params.outputs.ref }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
      - name: Build application
        run: ./gradlew clean build
        shell: bash
      - name: Login to Docker (on Master)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Extract docker image version
        id: get-version
        run: echo ::set-output name=version::"$(eval ./gradlew getVersion)"
      - name: Extract docker image name
        id: get-name
        run: echo ::set-output name=name::"$(eval ./gradlew getProjectName)"
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            airbyte/${{ steps.get-name.outputs.name }}:${{ steps.get-version.outputs.version }}
            airbyte/${{ steps.get-name.outputs.name }}:latest
      - name: Add Success Comment
        if: needs.set-params.outputs.comment-id && success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          body: |
            > :white_check_mark: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
          reactions: +1
      - name: Add Failure Comment
        if: needs.set-params.outputs.comment-id && failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          body: |
            > :x: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
          reactions: -1
  helps-run:
    runs-on: ubuntu-latest
    if: |
      needs.set-params.outputs.command == '/help-full' ||
      needs.set-params.outputs.command == '/help'
    needs: set-params
    steps:
      - name: Update comment for processing
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          reactions: eyes, rocket
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull Testing Tool docker image
        run: docker pull airbyte/airbyte-e2e-testing-tool:latest
      - name: Change wrapper permissions
        run: |
          mkdir secrets
          mkdir result
      - name: Connect to secret manager
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "/secrets/service_account_credentials.json"
          json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIALS }}
      - name: Run docker container with params
        run: docker run -v $(pwd)/secrets:/secrets -v $(pwd)/result:/result airbyte/airbyte-e2e-testing-tool:latest ${{ github.event.comment.body }}
      - name: Read file with results
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "result/log"
      - name: Add Success Comment
        if: needs.set-params.outputs.comment-id && success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          body: |
            > :white_check_mark: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
            ${{ steps.read_file.outputs.contents }}
      - name: Add Failure Comment
        if: needs.set-params.outputs.comment-id && failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          body: |
            > :x: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
  scenarios-run:
    runs-on: ubuntu-latest
    if: |
      needs.set-params.outputs.command == '/list-scenarios' ||
      needs.set-params.outputs.command == '/run-scenario' ||
      needs.set-params.outputs.command == '/run-scenario-local'
    needs: set-params
    steps:
      - name: Update comment for processing
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          reactions: eyes, rocket
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull Testing Tool docker image
        run : docker pull airbyte/airbyte-e2e-testing-tool:latest
      - name: Download docker-compose file
        uses: carlosperate/download-file-action@v1
        with:
          file-url: 'https://raw.githubusercontent.com/airbytehq/airbyte/master/docker-compose.yaml'
      - name: Download env file
        uses: carlosperate/download-file-action@v1
        with:
          file-url: 'https://raw.githubusercontent.com/airbytehq/airbyte/master/.env'
      - name: Rename env file
        run: mv env .env
      - name: Run Airbyte
        run: docker-compose up -d
      - name: Change wrapper permissions
        run: |
          mkdir secrets
          mkdir result
      - name: Connect to secret manager
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "/secrets/service_account_credentials.json"
          json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIALS }}
      - name: Run docker container with params
        run: docker run -v $(pwd)/secrets:/secrets -v $(pwd)/result:/result airbyte/airbyte-e2e-testing-tool:latest ${{ github.event.comment.body }}
      - name: Read file with results
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "result/log"
      - name: Add Success Comment
        if: needs.set-params.outputs.comment-id && success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          body: |
            > :white_check_mark: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
            ${{ steps.read_file.outputs.contents }}
      - name: Add Failure Comment
        if: needs.set-params.outputs.comment-id && failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.set-params.outputs.comment-id }}
          body: |
            > :x: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
