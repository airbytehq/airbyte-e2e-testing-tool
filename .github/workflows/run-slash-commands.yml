name: Run Testing Tool Commands 

on:
  issue_comment:
    types: [created]

jobs:
  setParams:
    # Only allow slash commands on pull request (not on issues)
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.getref.outputs.repo }}
      ref: ${{ steps.getref.outputs.ref }}
      comment-id: ${{ steps.comment-id.outputs.comment-id }}
      comment-body: ${{ steps.comment-info.outputs.comment-body }}
      command: ${{ steps.comment-info.outputs.first_match }}
    steps:
      - name: Get PR repo and ref
        id: getref
        run: |
          pr_info="$(curl ${{ github.event.issue.pull_request.url }})"
          echo ::set-output name=ref::"$(echo $pr_info | jq -r '.head.ref')"
          echo ::set-output name=repo::"$(echo $pr_info | jq -r '.head.repo.full_name')"
      - name: Get comment id
        id: comment-id
        run: |
          echo ::set-output name=comment-id::"${{ github.event.comment.id }}"
          echo ::set-output name=comment-body::"${{ github.event.comment.body }}"
      - name: Get command
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: "^/[a-zA-Z0-9_/-]+"
          regex_flags: "i"
          search_string: ${{ github.event.comment.body }}
  slashCommandDispatch:
    if: ${{ needs.setParams.outputs.command }} == "/help-full" || ${{ needs.setParams.outputs.command }} == "/list-scenarios"
    runs-on: ubuntu-latest
    needs: setParams
    steps:
      - name: Update comment for processing
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.setParams.outputs.comment-id }}
          reactions: eyes, rocket
      - name: Checkout Airbyte
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull Docker image
        run: docker pull postgres
      - name: Change wrapper permissions
        run: chmod +x ./.github/scripts/run_docker_with_params.sh
      - name: Run docker container with params
        run: ./.github/scripts/run_docker_with_params.sh ${{ needs.setParams.outputs.comment-body }}
      - name: Add Success Comment
        if: github.event.inputs.comment-id && success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.inputs.comment-id }}
          body: |
            > :white_check_mark: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
      - name: Add Failure Comment
        if: github.event.inputs.comment-id && failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.inputs.comment-id }}
          body: |
            > :x: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
