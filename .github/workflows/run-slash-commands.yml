name: Run Testing Tool Commands

on:
  issue_comment:
    types: [created]

jobs:
  setParams:
    # Only allow slash commands on pull request (not on issues)
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.getref.outputs.repo }}
      ref: ${{ steps.getref.outputs.ref }}
      comment-id: ${{ steps.comment-info.outputs.comment-id }}
      command: ${{ steps.regex.outputs.first_match }}
    steps:
      - name: Get PR repo and ref
        id: getref
        run: |
          pr_info="$(curl ${{ github.event.issue.pull_request.url }})"
          echo ::set-output name=ref::"$(echo $pr_info | jq -r '.head.ref')"
          echo ::set-output name=repo::"$(echo $pr_info | jq -r '.head.repo.full_name')"
      - name: Get comment id
        id: comment-info
        run: |
          echo ::set-output name=comment-id::"${{ github.event.comment.id }}"
      - name: Get command
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: "^/[a-zA-Z0-9_/-]+"
          regex_flags: "i"
          search_string: ${{ github.event.comment.body }}
  slashCommandDispatch:
    if: |
      needs.setParams.outputs.command == '/help-full' ||
      needs.setParams.outputs.command == '/list-scenarios' ||
      needs.setParams.outputs.command == '/run-scenario' ||
      needs.setParams.outputs.command == '/run-scenario-local' ||
      needs.setParams.outputs.command == '/help'
    runs-on: ubuntu-latest
    needs: setParams
    steps:
      - name: Update comment for processing
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.setParams.outputs.comment-id }}
          reactions: eyes, rocket
      - name: Checkout Testing Tool
        uses: actions/checkout@v2
        with:
          repository: ${{  needs.setParams.outputs.repo }}
          ref: ${{  needs.setParams.outputs.ref }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
      - name: Build application
        run: ./gradlew clean build
        shell: bash
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Change wrapper permissions
        run: |
          chmod +x ./.github/scripts/run_docker_with_params.sh
          mkdir secrets
          mkdir result
      - name: Connect to secret manager
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "/secrets/service_account_credentials.json"
          json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIALS }}
      - name: Run docker container with params
        run: ./.github/scripts/run_docker_with_params.sh '${{ github.event.comment.body }}'
      - name: Read file with results
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "result/log"
      - name: Add Success Comment
        if: needs.setParams.outputs.comment-id && success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.setParams.outputs.comment-id }}
          body: |
            > :white_check_mark: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
            ${{ steps.read_file.outputs.contents }}
      - name: Add Failure Comment
        if: needs.setParams.outputs.comment-id && failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ needs.setParams.outputs.comment-id }}
          body: |
            > :x: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
            ${{ steps.read_file.outputs.contents }}
