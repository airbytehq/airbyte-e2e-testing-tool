name: help-full

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repo to check out code from. Defaults to the main airbyte-e2e-testing-tool repo. Set this when building connectors from forked repos."
        required: false
        default: "airbytehq/airbyte-e2e-testing-tool"
      gitref:
        description: "The git ref to check out from the specified repository."
        required: false
        default: master
      comment-id:
        description: "The comment-id of the slash command. Used to update the comment with the status."
        required: false
      comment-body:
        description: "The comment-body."
        required: false

jobs:
  run-help:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Get comment body
        id: comment-info
        run: |
          full_comment="${{ github.event.inputs.comment-body }}"
          comment_without_spaces=${full_comment//\|\|\|/ }
          echo ::set-output name=comment-body::${full_comment//\|\|/\=}

      - name: Update comment for processing
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.comment.id }}
          edit-mode: replace
          body: ${{ steps.regex.outputs.comment-body }}
          reactions: eyes, rocket

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Pull Docker image
        run : docker pull postgres

      - name: Echo comment body ${{ github.event.inputs.comment-id }}
        run: echo ${{ github.event.inputs.comment-id }}

      - name: Change wrapper permissions
        run: chmod +x ./.github/scripts/run_help_full.sh

      - name: Run docker container ${{ github.event.inputs.comment-id }}
        shell: bash
        run: ./.github/scripts/run_help_full.sh /help-full

      - name: Add Success Comment
        if: github.event.inputs.comment-id && success()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.inputs.comment-id }}
          body: |
            > :white_check_mark: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

      - name: Add Failure Comment
        if: github.event.inputs.comment-id && failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.inputs.comment-id }}
          body: |
            > :x: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
